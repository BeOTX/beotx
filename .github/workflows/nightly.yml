---
name: Build and deploy nightly release
on:
  # push:
  #   branches: [ nightly_filenames ]
  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC

jobs:
  metadata:
    name: Store metadata
    runs-on: ubuntu-latest
    steps: 
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Package common files
      uses: 'actions/upload-artifact@v2'
      with:
        name: edgetx-firmware-nightly
        path: |
          fw.json
          LICENSE
          README.md

  build:
    name: Build firmware
    runs-on: ubuntu-latest
    needs: metadata
    strategy:
      matrix:
        target:
          - T12
          - T16
          - T8
          - TLITE
          - TX12
          - TX16S
          - X10
          - X12S
          - X7
          - X9DP
          - X9DP2019
          - X9LITE
          - XLITE
    container:
      image: ghcr.io/edgetx/edgetx-commit-tests
      volumes:
        - ${{ github.workspace }}:/src
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build firmware ${{ matrix.target }}
        env:
          FLAVOR: ${{ matrix.target }}
        run: ./tools/build-gh.sh

      - name: Package firmware ${{ matrix.target }}
        uses: 'actions/upload-artifact@v2'
        with:
          name: edgetx-firmware-nightly
          path: "${{ github.workspace }}/*.bin"
          retention-days: 15
          if-no-files-found: error

  deploy:
    name: Deploy release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: edgetx-firmware-nightly
          path: edgetx-firmware-nightly

      - name: Compose release filename
        run: echo "release_filename=edgetx-firmware-nightly-${GITHUB_SHA::8}.tgz" >> $GITHUB_ENV

      - name: Package files
        run: tar -cvzf ${{ env.release_filename }} ./edgetx-firmware-nightly

      - name: Deploy release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "nightly"
          prerelease: true
          files: |
            ${{ env.release_filename }}
