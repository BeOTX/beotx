set(APP_DIR "@CPACK_PACKAGE_DIRECTORY@/_CPack_Packages/Linux/External/AppImage")

execute_process(COMMAND @CMAKE_MAKE_PROGRAM@ DESTDIR=${APP_DIR} install
                WORKING_DIRECTORY @CMAKE_BINARY_DIR@)

# setup Companion application
execute_process(COMMAND @LINUXDEPLOY_APP@ --executable @COMPANION_NAME@ --desktop etc etc--appdir ${APP_DIR}
                WORKING_DIRECTORY @CMAKE_BINARY_DIR@)

# setup Simulator application
execute_process(COMMAND @LINUXDEPLOY_APP@ --executable @SIMULATOR_NAME@ --desktop etc etc--appdir ${APP_DIR}
                WORKING_DIRECTORY @CMAKE_BINARY_DIR@)

# setup libsims
file(GLOB simulator_plugins "${APP_DIR}@CMAKE_INSTALL_PREFIX@/lib/@COMPANION_NAME@/*@CMAKE_SHARED_LIBRARY_SUFFIX@")
message("Simulator plugins: ${simulator_plugins}")

if(simulator_plugins)
  foreach(libsim ${simulator_plugins})
    execute_process(COMMAND @LINUXDEPLOY_APP@ --library ${libsim} --appdir ${APP_DIR}
                    WORKING_DIRECTORY @CMAKE_BINARY_DIR@)
  endforeach()
endif()

# make sure Qt plugin finds QML sources so it can deploy the imported files
execute_process(COMMAND env QML_SOURCES_PATHS=@CMAKE_BINARY_DIR@ @LINUXDEPLOY_APP@ --appdir ${APP_DIR} --plugin qt
                WORKING_DIRECTORY @CMAKE_BINARY_DIR@)

# build the AppImage though WHAT FILENAME WILL IT CREATE!!!!!!!
# this could be combined wih the last plugin but keep as independent last step
execute_process(COMMAND @LINUXDEPLOY_APP@ --appdir ${APP_DIR} --output appimage
                WORKING_DIRECTORY @CMAKE_BINARY_DIR@)
