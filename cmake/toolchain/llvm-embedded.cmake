# arm-none-eabi toolchain
set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR arm)
set(CMAKE_CXX_STANDARD 11)

set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

if(MINGW OR WIN32)
  set(EXE_SUFFIX ".exe")
  set(CMAKE_OBJECT_PATH_MAX 200)
endif()

if(ARM_TOOLCHAIN_DIR)
  cmake_path(SET ARM_TOOLCHAIN_DIR NORMALIZE ${ARM_TOOLCHAIN_DIR})
  set(ARM_TOOLCHAIN_DIR "${ARM_TOOLCHAIN_DIR}/")
endif()

set(CMAKE_AR           ${ARM_TOOLCHAIN_DIR}llvm-ar${EXE_SUFFIX})
set(CMAKE_ASM_COMPILER ${ARM_TOOLCHAIN_DIR}clang${EXE_SUFFIX})
set(CMAKE_C_COMPILER   ${ARM_TOOLCHAIN_DIR}clang${EXE_SUFFIX})
set(CMAKE_CXX_COMPILER ${ARM_TOOLCHAIN_DIR}clang++${EXE_SUFFIX})
set(CMAKE_LINKER       ${ARM_TOOLCHAIN_DIR}lld${EXE_SUFFIX})
set(CMAKE_OBJCOPY      ${ARM_TOOLCHAIN_DIR}llvm-objcopy${EXE_SUFFIX} CACHE INTERNAL "")
set(CMAKE_RANLIB       ${ARM_TOOLCHAIN_DIR}llvm-ranlib${EXE_SUFFIX} CACHE INTERNAL "")
set(CMAKE_SIZE_UTIL    ${ARM_TOOLCHAIN_DIR}llvm-size${EXE_SUFFIX} CACHE INTERNAL "")
set(CMAKE_STRIP        ${ARM_TOOLCHAIN_DIR}llvm-strip${EXE_SUFFIX} CACHE INTERNAL "")
set(CMAKE_GCOV         ${ARM_TOOLCHAIN_DIR}llvm-cov${EXE_SUFFIX} CACHE INTERNAL "")

# Generate .elf files
set(CMAKE_EXECUTABLE_SUFFIX ".elf")
set(CMAKE_EXECUTABLE_SUFFIX_C ".elf")
set(CMAKE_EXECUTABLE_SUFFIX_CXX ".elf")

# Optimize for code size by default
set(C_FLAGS_INIT "-Oz -Wall -fdata-sections -ffunction-sections -fomit-frame-pointer")
set(CXX_FLAGS_INIT "${C_FLAGS_INIT} -Wno-deprecated-register -fno-rtti -fno-exceptions -fno-unwind-tables -fno-c++-static-destructors -fno-threadsafe-statics")

# Default ASM compiler flags
set(CMAKE_ASM_FLAGS "-Wno-unused-command-line-argument")

# Default C compiler flags
set(CMAKE_C_FLAGS_INIT "${C_FLAGS_INIT} -g3")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS_INIT}" CACHE STRING "" FORCE)
set(CMAKE_C_FLAGS_RELEASE_INIT "${C_FLAGS_INIT}")
set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE_INIT}" CACHE STRING "" FORCE)

# Default C++ compiler flags
set(CMAKE_CXX_FLAGS_INIT "${CXX_FLAGS_INIT}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS_INIT}" CACHE STRING "" FORCE)
set(CMAKE_CXX_FLAGS_RELEASE_INIT "${CXX_FLAGS_INIT}")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE_INIT}" CACHE STRING "" FORCE)

# customize linker command
set(CMAKE_EXE_LINKER_FLAGS "")
set(CMAKE_C_LINK_EXECUTABLE "<CMAKE_C_COMPILER> <FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES>")
set(CMAKE_CXX_LINK_EXECUTABLE "<CMAKE_CXX_COMPILER> <FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES>")

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
